(()=>{"use strict";const{Button:t}=wp.components,{Component:e,createElement:s}=wp.element,i=class extends e{constructor(t){super(t),this.handleChange=this.handleChange.bind(this),this.state={isChecked:!1,isClicked:!1}}handleChange(t){if("clicked"===t)return t='{"date" : "'+this.props.currentTime.date+'", "date_gmt" : "'+this.props.currentTime.date_gmt+'", "status" : "publish"}',this.setState({isClicked:!0}),this.setState({isChecked:!1}),this.props.editPost(t),this.props.setMetaValue({publishImmediately:!0}),void this.props.savePost()}render(){return this.props.isScheduled&&!this.props.isPublished?s(t,{isPrimary:!0,onClick:()=>{this.handleChange("clicked")}},this.props.publish):null}},{Button:h}=wp.components,{Component:o,createElement:p}=wp.element,l=class extends o{constructor(t){super(t),this.handleChange=this.handleChange.bind(this),this.state={isChecked:!1,isClicked:!1,prevent_future_post:!1}}handleChange(t){if("clicked"===t)return this.setState({isClicked:!0}),this.setState({isChecked:!1}),this.setState({prevent_future_post:!0}),t='{"status" : "publish"}',this.props.editPost(t),this.props.setMetaValue({publishImmediately:!0,prevent_future_post:!0,date_type:"future"}),void this.props.savePost()}render(){return this.props.isScheduled&&!this.props.isPublished?p(h,{isPrimary:!0,onClick:()=>{this.handleChange("clicked")}},this.props.publish):null}},{compose:a,ifCondition:r,withInstanceId:u}=wp.compose,{withSelect:n,withDispatch:d}=wp.data,{PluginPostStatusInfo:c}=wp.editPost,{Component:m,createElement:b,useState:C}=wp.element,{CheckboxControl:P}=wp.components,{publishImmediately:g,publishFutureDate:w,currentTime:f,publish_button_off:y,allowedPostTypes:S}=WPSchedulePostsFree,k=a([n((t=>{const{getCurrentPostType:e,getEditedPostAttribute:s,isCurrentPostScheduled:i,isCurrentPostPublished:h,getCurrentPost:o}=t("core/editor");return{postType:e(),meta:s("meta"),isScheduled:i(),isPublished:h(),post:o()}})),d(((t,{meta:e})=>{const{editPost:s,savePost:i}=t("core/editor");return{editPost(t){var e=JSON.parse(t);"string"==typeof e&&(e=JSON.parse(e)),s({date:e.date,date_gmt:e.date_gmt,status:e.status})},setMetaValue:function(t){s({meta:t})},savePost:i}})),r((({postType:t})=>(S.includes(t),!0)))])(class extends m{constructor(t){super(t),this.handleChange=this.handleChange.bind(this),this.state={showHelp:!1,publishImmediately:!1}}componentWillReceiveProps=t=>{"publish"==this.props.post.status&&"future"==t.post.status&&(this.setState({publishImmediately:!1}),console.log(this.props.post.status,t.post.status))};handleChange(t){}render(){return""==y||!this.props.isScheduled||this.props.isPublished?"":b(c,null,b("div",{className:"sc-publish-future"},b("div",null,b(P,{label:"Publish future post immediately",checked:this.state.publishImmediately,onChange:t=>{this.setState({publishImmediately:t}),0==t&&this.setState({showHelp:!1})}}),b("a",{id:"wpscp-future-post-help-handler",className:"dashicons dashicons-info",href:"#",title:"Show/Hide Help",onClick:t=>{t.preventDefault(),this.setState({showHelp:!this.state.showHelp})}})),this.state.publishImmediately&&b("div",{className:"sc-publish-future-buttons"},b(i,{...this.props,currentTime:f,publish:g}),b(l,{...this.props,currentTime:f,publish:w})),this.state.showHelp&&b("div",{style:{marginTop:5,color:"#757575"}},"If you choose to publish this future post with the Future Date, it will be published immediately but the postâ€™s date time will not set the current date rather it will be your scheduled future date time.")))}}),{registerPlugin:v}=wp.plugins;v("wps-publish-button",{render:k})})();