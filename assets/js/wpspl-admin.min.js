/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/gutenberg/index.js":
/*!***********************************!*\
  !*** ./assets/gutenberg/index.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _publish_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./publish-button */ "./assets/gutenberg/publish-button.js");
/* harmony import */ var _publish_future_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./publish-future-button */ "./assets/gutenberg/publish-future-button.js");

/**
 * WordPress dependencies
 */
const {
  compose,
  ifCondition,
  withInstanceId
} = wp.compose;
const {
  withSelect,
  withDispatch
} = wp.data;
const {
  PluginPostStatusInfo
} = wp.editPost;
const {
  Component,
  createElement,
  useState
} = wp.element;
const {
  CheckboxControl
} = wp.components;
const {
  publishImmediately,
  publishFutureDate,
  currentTime,
  publish_button_off,
  allowedPostTypes
} = WPSchedulePostsFree;



class AdminPublishButton extends Component {
  constructor(props) {
    super(props);
    this.handleChange = this.handleChange.bind(this);
    this.state = {
      showHelp: false,
      publishImmediately: false
    };
  }
  componentWillReceiveProps = nextProps => {
    if (this.props.post.status == 'publish' && nextProps.post.status == 'future') {
      this.setState({
        publishImmediately: false
      });
      console.log(this.props.post.status, nextProps.post.status);
    }
  };
  handleChange(checked) {}
  render() {
    if (publish_button_off == "" || !(this.props.isScheduled && !this.props.isPublished)) {
      return "";
    }
    return createElement(PluginPostStatusInfo, null, createElement("div", {
      className: "sc-publish-future"
    }, createElement("div", null, createElement(CheckboxControl, {
      label: "Publish future post immediately",
      checked: this.state.publishImmediately,
      onChange: checked => {
        this.setState({
          publishImmediately: checked
        });
        if (checked == false) {
          this.setState({
            showHelp: false
          });
        }
      }
    }), createElement("a", {
      id: "wpscp-future-post-help-handler",
      className: "dashicons dashicons-info",
      href: "#",
      title: "Show/Hide Help",
      onClick: event => {
        event.preventDefault();
        this.setState({
          showHelp: !this.state.showHelp
        });
      }
    })), this.state.publishImmediately && createElement("div", {
      className: "sc-publish-future-buttons"
    }, createElement(_publish_button__WEBPACK_IMPORTED_MODULE_2__["default"], (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.props, {
      currentTime: currentTime,
      publish: publishImmediately
    })), createElement(_publish_future_button__WEBPACK_IMPORTED_MODULE_3__["default"], (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.props, {
      currentTime: currentTime,
      publish: publishFutureDate
    }))), this.state.showHelp && createElement("div", {
      style: {
        marginTop: 5,
        color: "#757575"
      }
    }, "If you choose to publish this future post with the Future Date, it will be published immediately but the post\u2019s date time will not set the current date rather it will be your scheduled future date time.")));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (compose([withSelect(select => {
  const {
    getCurrentPostType,
    getEditedPostAttribute,
    isCurrentPostScheduled,
    isCurrentPostPublished,
    getCurrentPost
  } = select("core/editor");
  return {
    postType: getCurrentPostType(),
    meta: getEditedPostAttribute("meta"),
    isScheduled: isCurrentPostScheduled(),
    isPublished: isCurrentPostPublished(),
    post: getCurrentPost()
  };
}), withDispatch((dispatch, _ref) => {
  let {
    meta
  } = _ref;
  const {
    editPost,
    savePost
  } = dispatch("core/editor");
  return {
    editPost(newMeta) {
      var new_date = JSON.parse(newMeta);
      if (typeof new_date === "string") {
        new_date = JSON.parse(new_date);
      }
      editPost({
        date: new_date.date,
        date_gmt: new_date.date_gmt,
        status: new_date.status
      });
    },
    setMetaValue: function (metaValue) {
      editPost({
        meta: metaValue
      });
    },
    savePost
  };
}), ifCondition(_ref2 => {
  let {
    postType
  } = _ref2;
  if (allowedPostTypes.includes(postType) !== false) {
    return true;
  } else {
    return true;
  }
})])(AdminPublishButton));

/***/ }),

/***/ "./assets/gutenberg/publish-button.js":
/*!********************************************!*\
  !*** ./assets/gutenberg/publish-button.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/**
 * WordPress dependencies
 */

const {
  Button
} = wp.components;
const {
  Component,
  createElement
} = wp.element;
class PublishButton extends Component {
  constructor(props) {
    super(props);
    this.handleChange = this.handleChange.bind(this);
    this.state = {
      isChecked: false,
      isClicked: false
    };
  }
  handleChange(value) {
    if (value === 'clicked') {
      value = '{"date" : "' + this.props.currentTime.date + '", "date_gmt" : "' + this.props.currentTime.date_gmt + '", "status" : "publish"}';
      this.setState({
        isClicked: true
      });
      this.setState({
        isChecked: false
      });
      this.props.editPost(value);
      this.props.setMetaValue({
        publishImmediately: true
      });
      this.props.savePost();
      return;
    }
  }
  render() {
    if (this.props.isScheduled && !this.props.isPublished) {
      return createElement(Button, {
        isPrimary: true,
        onClick: () => {
          this.handleChange('clicked');
        }
      }, this.props.publish);
    }
    return null;
  }
}
/* harmony default export */ __webpack_exports__["default"] = (PublishButton);

/***/ }),

/***/ "./assets/gutenberg/publish-future-button.js":
/*!***************************************************!*\
  !*** ./assets/gutenberg/publish-future-button.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/**
 * WordPress dependencies
 */

const {
  Button
} = wp.components;
const {
  Component,
  createElement
} = wp.element;
class PublishFutureButton extends Component {
  constructor(props) {
    super(props);
    this.handleChange = this.handleChange.bind(this);
    this.state = {
      isChecked: false,
      isClicked: false,
      prevent_future_post: false
    };
  }
  handleChange(value) {
    if (value === 'clicked') {
      this.setState({
        isClicked: true
      });
      this.setState({
        isChecked: false
      });
      this.setState({
        prevent_future_post: true
      });
      value = '{"status" : "publish"}';
      this.props.editPost(value);
      this.props.setMetaValue({
        publishImmediately: true,
        prevent_future_post: true,
        date_type: "future"
      });
      this.props.savePost();
      return;
    }
  }
  render() {
    if (this.props.isScheduled && !this.props.isPublished) {
      return createElement(Button, {
        isPrimary: true,
        onClick: () => {
          this.handleChange('clicked');
        }
      }, this.props.publish);
    }
    return null;
  }
}
/* harmony default export */ __webpack_exports__["default"] = (PublishFutureButton);

/***/ }),

/***/ "@wordpress/components":
/*!************************************!*\
  !*** external ["wp","components"] ***!
  \************************************/
/***/ (function(module) {

module.exports = window["wp"]["components"];

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!******************!*\
  !*** ./index.js ***!
  \******************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _assets_gutenberg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/gutenberg */ "./assets/gutenberg/index.js");
const {
  registerPlugin
} = wp.plugins;

registerPlugin('wps-publish-button', {
  render: _assets_gutenberg__WEBPACK_IMPORTED_MODULE_0__["default"]
});
}();
/******/ })()
;
//# sourceMappingURL=wpspl-admin.min.js.map